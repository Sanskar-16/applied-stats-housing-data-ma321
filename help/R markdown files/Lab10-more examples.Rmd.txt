---
title: "Some more examples"
author: "Aris Perperoglou"
date: "14 November 2018"
output:
  revealjs::revealjs_presentation:
    theme: simple
    highlight: pygments
    center: true
    transition: none
---

# Error bars with lines

## Data & code

```{r  message=FALSE, warning=FALSE}
library(ggplot2)
pp <- rep(c("Conservative","Labour","UKIP","LibDems","Green"),5)
df <- data.frame(month =factor(rep(c("1Jan2015",
                                     "1Feb2015","1Mar2015",
                                     "1Apr2015","1May2015"),
                                   each=5)),
            percent =c(31,30,17,7,6,33,30,16,8,7,34,32,14,
                       8,6,34,33,14,8,5,34,33,14,8,5),
            se = c(2.3,1.2,1.1,1,0.6,2.2,2.6,2.4,1,1, 2.2,
                   2.2,1.5,1.3,1, 2.8,3,2,1.5,1,3.2,3.2,1.5,1.3,1),
                  Party=pp)
```

## Have a look 

```{r}
head(df)
```


## Create errors & colors


```{r}
limits <- aes(ymax = percent + se, ymin=percent - se)
cbPalette <- c( "#3182bd","#31a354","#dd1c77","#fdae6b","#756bb1")
```

You can check your colors at http://colorbrewer2.org/

## Plot

```{r,eval=FALSE}
p <- ggplot(df, aes(colour=Party, y=percent, x=month))+ theme_bw()
p + geom_point(size=4) +
  geom_errorbar(size=.8,limits, width=0.1)+
  scale_colour_manual(values=cbPalette)+
  geom_point(aes(colour=Party), size=3)+
  geom_line(aes(group=Party))
```




## Plot

```{r,echo=FALSE}
p <- ggplot(df, aes(colour=Party, y=percent, x=month))+ theme_bw()
p + geom_point(size=4) +
  geom_errorbar(size=.8,limits, width=0.1)+
  scale_colour_manual(values=cbPalette)+
  geom_point(aes(colour=Party), size=3)+
  geom_line(aes(group=Party))
```



## Fix dates & legend

```{r, eval=FALSE}
df$month <- as.Date(df$month, "%d%b%Y")
p <- ggplot(df, aes(colour=Party, y=percent, x=month))+ theme_bw()+theme(legend.position =  c( .09,.57))
p + geom_point(size=4) +
  geom_errorbar(size=.8,limits, width=0.1)+
  scale_colour_manual(values=cbPalette)+geom_point(aes(colour=Party), size=3)+
  geom_line(aes(group=Party))
```




## Fix dates & legend

```{r, echo=FALSE}
df$month <- as.Date(df$month, "%d%b%Y")
p <- ggplot(df, aes(colour=Party, y=percent, x=month))+ theme_bw()+
  theme(legend.position =  c( .09,.57))
p + geom_point(size=4) +
  geom_errorbar(size=.8,limits, width=0.1)+
  scale_colour_manual(values=cbPalette)+
  geom_point(aes(colour=Party), size=3)+
  geom_line(aes(group=Party))
```

# More examples

## A simple data set

```{r}
df <- data.frame(dose=c("D0.5", "D1", "D2"),
                 len=c(4.2, 10, 29.5))
```

## The data
```{r}
df
```

## A barplot

```{r, eval=FALSE}
ggplot(data=df, aes(x=dose, y=len)) +
		  geom_bar(stat="identity", fill="steelblue")+
		  geom_text(aes(label=len), vjust=-0.3, size=3.5)+
		  theme_minimal()
```



## A barplot

```{r, echo=FALSE}
ggplot(data=df, aes(x=dose, y=len)) +
		  geom_bar(stat="identity", fill="steelblue")+
		  geom_text(aes(label=len),vjust=-0.3,size=3.5)+
		  theme_minimal()
```


## Text in bars
```{r, eval=FALSE}
ggplot(data=df, aes(x=dose, y=len)) +
		  geom_bar(stat="identity", fill="steelblue")+
		  geom_text(aes(label=len), vjust=1.6, color="white", size=3.5)+
		  theme_minimal()
```



## Text in bars
```{r, echo=FALSE}
ggplot(data=df, aes(x=dose, y=len)) +
		  geom_bar(stat="identity", fill="steelblue")+
		  geom_text(aes(label=len), vjust=1.6, color="white", size=3.5)+
		  theme_minimal()
```


## Labels

```{r, eval=FALSE}
g1 <-ggplot(df, aes(x=dose, y=len, fill=dose)) +
   geom_bar(stat="identity")+theme_minimal()+
   geom_text(aes(label=len), vjust=1.6, color="white", size=3.5)
g1
```


## Labels

```{r, echo=FALSE}
g1 <-ggplot(df, aes(x=dose, y=len, fill=dose)) +
   geom_bar(stat="identity")+theme_minimal()+
   geom_text(aes(label=len), vjust=1.6, color="white", size=3.5)
g1
```


## Labels
```{r, eval=FALSE}
g1+ theme(legend.position="top")+ scale_fill_grey()
```


## Labels
```{r, echo=FALSE}
g1+ theme(legend.position="top")+ scale_fill_grey()
```


## Add error lines
```{r, eval=FALSE}
sd <- c(0.6,1.1,3.2)
df <- cbind(df,sd)
g1 <- ggplot(df, aes(x=dose, y=len, fill=dose)) +
  geom_bar(stat="identity", position=position_dodge()) +
  geom_errorbar(aes(ymin=len-sd, ymax=len+sd), width=.2,
  position=position_dodge(.9))
g1 + labs(title="Plot of length  per dose",
 x="Dose (mg)", y = "Length")+
 scale_fill_manual(values=c('black','lightgray','gray'))+
 theme_classic()
```

## Add error lines
```{r, echo=FALSE}
sd <- c(0.6,1.1,3.2)
df <- cbind(df,sd)
g1 <- ggplot(df, aes(x=dose, y=len, fill=dose)) +
  geom_bar(stat="identity", position=position_dodge()) +
  geom_errorbar(aes(ymin=len-sd, ymax=len+sd), width=.2,
  position=position_dodge(.9))
g1 + labs(title="Plot of length  per dose",
 x="Dose (mg)", y = "Length")+
 scale_fill_manual(values=c('black','lightgray','gray'))+
 theme_classic()
```


# Exploring Relationships

## The allmighty scatterplot

```{r,eval=FALSE}
library(MASS)
data("mcycle")
g1 <- ggplot(mcycle,aes(x=times,y=accel))+geom_point()+
      xlab("Time in msec")+
     ylab("head acceleration g units")+
     ggtitle("Crash helmet data")
g1
```


## The allmighty scatterplot

```{r,echo=FALSE}
library(MASS)
data("mcycle")
g1 <- ggplot(mcycle,aes(x=times,y=accel))+geom_point()+xlab("Time in msec")+
     ylab("head acceleration g units")+
     ggtitle("Crash helmet data")
g1
```

## Add smoother

```{r, eval=FALSE}
g1 + stat_smooth()
```


## Add smoother

```{r, echo=FALSE, fig.width=6, fig.height=3}
g1 + stat_smooth()
```


## A step back

```{r}
fit <- lm(accel~times,data=mcycle)
summary(fit)
```


## A step back

```{r, fig.width=8, fig.height=5}
plot(mcycle$times,mcycle$accel)
abline(fit)
```



## Non-linear model

```{r}
x1 <- mcycle$times; y <- mcycle$accel
x2 <- x1^2;x3 <- x1^3
fit.pol <- lm(y~x1+x2+x3)
summary(fit.pol)
```

## Non-linear model
```{r, fig.width=8, fig.height=5}
plot(mcycle$times,mcycle$accel)
lines(x1,78.582514-17.113715*x1+0.667766*x2-0.007012*x3)
```


## Splines

```{r, fig.width=7, fig.height=4}
library(splines)
X <- bs(1:100,df=15)
matplot(1:100,X,type="l")
```

## Splines fit

```{r}
B <- bs(x1,df=15)
fit.splines <- lm(y~B)
summary(fit.splines)
```

## Plot fit 

```{r, fig.width=8, fig.height=5}
plot(mcycle$times,mcycle$accel)
lines(x1,predict(fit.splines,type="terms"))
```


## Smoothing in ggplot

```{r, eval=FALSE}
g1+ stat_smooth(method = "lm", formula = y ~ bs(x,3))
```


## Smoothing in ggplot

```{r, echo=FALSE}
g1+ stat_smooth(method = "lm", formula = y ~ bs(x,3))+
  theme_bw()
```


## Smoothing in ggplot
```{r, eval=FALSE}
g1+ stat_smooth(method = "lm", formula = y ~ bs(x,12),
    fill="#fa9fb5",alpha=.7,size=1,colour="#c51b8a")+
  theme_bw()
```

## Smoothing in ggplot

```{r, echo=FALSE}
g1+ stat_smooth(method = "lm", formula = y ~ bs(x,12),
    fill="#fa9fb5",alpha=.7,size=1,colour="#c51b8a")+
  theme_bw()
```
